akka.actor.serializers {
  kryo = "com.twitter.chill.akka.AkkaSerializer"
}

akka.actor.serialization-bindings {
  "java.io.Serializable" = kryo
}

akka.actor {
  # Set this to on to enable serialization-bindings defined in
  # additional-serialization-bindings. Those are by default not included
  # for backwards compatibility reasons. They are enabled by default if
  # akka.remote.artery.enabled=on.
  enable-additional-serialization-bindings = on

  allow-java-serialization = off
}

akka {
  actor {
    provider = "cluster"
  }

  discovery.config.services = {
    flerken-work-scheduler = {
      endpoints = [
        {
          host = "scheduler-node-a"
          port = 8558
        },
        {
          host = "scheduler-node-b"
          port = 8558
        }
      ]
    }
  }

  discovery.kubernetes-api {
      # Namespace discovery path
      #
      # If this path doesn't exist, the namespace will default to "default".

      # Namespace to query for pods.
      #
      # Set this value to a specific string to override discovering the namespace using pod-namespace-path.
      pod-namespace = flerken
      pod-namespace = ${?FLERKEN_NAMESPACE}

      # Selector value to query pod API with.
      # `%s` will be replaced with the configured effective name, which defaults to the actor system name
      pod-label-selector = "app=%s"
  }
}

akka.management {
  cluster.bootstrap {
    contact-point-discovery {
      service-name = ${?FLERKEN_SERVICENAME}
      discovery-method = config
      discovery-method = ${?DISCOVERY_METHOD}
    }
  }
}

akka.management.http.port = 8558
akka.management.http.hostname = ${?FLERKEN_HOSTNAME}

akka.actor.serializers {
  kryo = "com.twitter.chill.akka.AkkaSerializer"
}

akka.actor.serialization-bindings {
  "java.io.Serializable" = kryo
}

akka.actor {
  # Set this to on to enable serialization-bindings defined in
  # additional-serialization-bindings. Those are by default not included
  # for backwards compatibility reasons. They are enabled by default if
  # akka.remote.artery.enabled=on.
  enable-additional-serialization-bindings = on

  allow-java-serialization = off
}

akka {
  http {
    client {
      idle-timeout = 120 s
    }

    host-connection-pool {
      idle-timeout = 240 s
    }
  }
}

akka.cluster.downing-provider-class = "tanukki.akka.cluster.autodown.MajorityLeaderAutoDowning"

custom-downing {
  stable-after = 20s

  majority-leader-auto-downing {
    majority-member-role = ""
    down-if-in-minority = true
    shutdown-actor-system-on-resolution = true
  }
}